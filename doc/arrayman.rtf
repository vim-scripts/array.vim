{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f23\froman\fcharset128\fprq1{\*\panose 02020609040205080304}MS Mincho{\*\falt MS ??};}{\f32\fmodern\fcharset128\fprq1{\*\panose 02020609040205080304}@MS Mincho;}
{\f33\froman\fcharset238\fprq2 Times New Roman CE;}{\f34\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f36\froman\fcharset161\fprq2 Times New Roman Greek;}{\f37\froman\fcharset162\fprq2 Times New Roman Tur;}
{\f38\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f39\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f40\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f41\fswiss\fcharset238\fprq2 Arial CE;}{\f42\fswiss\fcharset204\fprq2 Arial Cyr;}
{\f44\fswiss\fcharset161\fprq2 Arial Greek;}{\f45\fswiss\fcharset162\fprq2 Arial Tur;}{\f46\fswiss\fcharset177\fprq2 Arial (Hebrew);}{\f47\fswiss\fcharset178\fprq2 Arial (Arabic);}{\f48\fswiss\fcharset186\fprq2 Arial Baltic;}
{\f49\fmodern\fcharset238\fprq1 Courier New CE;}{\f50\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f52\fmodern\fcharset161\fprq1 Courier New Greek;}{\f53\fmodern\fcharset162\fprq1 Courier New Tur;}{\f54\fmodern\fcharset177\fprq1 Courier New (Hebrew);}
{\f55\fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f56\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f291\fmodern\fcharset0\fprq1 @MS Mincho Western;}{\f289\fmodern\fcharset238\fprq1 @MS Mincho CE;}{\f290\fmodern\fcharset204\fprq1 @MS Mincho Cyr;}
{\f292\fmodern\fcharset161\fprq1 @MS Mincho Greek;}{\f293\fmodern\fcharset162\fprq1 @MS Mincho Tur;}{\f296\fmodern\fcharset186\fprq1 @MS Mincho Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;
\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;
\red192\green192\blue192;\red33\green97\blue70;\red167\green182\blue54;\red106\green35\blue16;\red192\green36\blue136;\red0\green221\blue216;\red93\green66\blue29;\red0\green232\blue0;\red106\green0\blue0;}{\stylesheet{
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}{\*\cs15 \additive \f1\fs20\cf0 \sbasedon10 \spersonal 
Personal Compose Style;}{\*\cs16 \additive \f1\fs20\cf0 \sbasedon10 \spersonal Personal Reply Style;}{\s17\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f2\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
\sbasedon0 \snext17 Plain Text;}{\s18\ql \li0\ri0\widctlpar\tqc\tx4320\tqr\tx8640\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext18 header;}{
\s19\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \cbpat18 \fs20\lang1033\langfe1033\loch\f2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 \sbasedon17 \snext23 \sautoupd HeaderSep;}{
\s20\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \cbpat21 \fs20\lang1033\langfe1033\loch\f2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 \sbasedon17 \snext23 \sautoupd Divider;}{
\s21\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\fs20\cf19\lang1033\langfe1033\loch\f2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 \sbasedon17 \snext21 \sautoupd CmdTxt;}{
\s22\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\fs20\cf20\lang1033\langfe1033\loch\f2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 \sbasedon17 \snext22 \sautoupd ArgTxt;}{
\s23\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\cf17\lang1033\langfe1033\loch\f2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 \sbasedon17 \snext23 \sautoupd DispTxt;}{
\s24\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\fs20\cf17\lang1033\langfe1033\loch\f2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 \sbasedon23 \snext24 \sautoupd EmphTxt;}{\s25\ql \li0\ri0\widctlpar
\tqc\tx4320\tqr\tx8640\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext25 footer;}{\s27\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \cbpat4 
\fs20\cf17\lang1033\langfe1033\loch\f2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 \sbasedon23 \snext27 safe;}}{\info{\title  }{\author Dave Silvia}{\operator Dave Silvia}{\creatim\yr2004\mo9\dy2\hr3\min5}{\revtim\yr2004\mo9\dy2\hr3\min7}{\version3}
{\edmins2}{\nofpages7}{\nofwords1722}{\nofchars9819}{\*\company Cheshire Cat Enterprises}{\nofcharsws12058}{\vern8229}}\margl1319\margr1319 \widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\formshade\horzdoc\dgmargin
\dghspace180\dgvspace180\dghorigin1319\dgvorigin1440\dghshow1\dgvshow1\jexpand\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot\splytwnine\ftnlytwnine\htmautsp\nolnhtadjtbl\useltbaln\alntblind\lytcalctblwd\lyttblrtgr\lnbrkrule \fet0
{\*\docvar {_ExportToHTMLPath}{C:\'5c__ZIP\'5czip\'5cVim\'5carray.vim\'5c1.2\'5cdoc\'5carrayman.html}}
{\*\docvar {MuPAD}{OutputStyle:\'0dExpressionStyle:\'0dPrettyPrint:1\'0dTextWidth:75\'0dTypeset:1\'0dScriptMinSize:8\'0dScriptSizeMultiplier:71\'0dSlantedIdentifiers:1\'0dHideInput:0\'0dLibMode:Evaluate\'0d}}\sectd 
\linex0\endnhere\sectlinegrid360\sectdefaultcl {\header \pard\plain \s18\ql \li0\ri0\widctlpar\tqc\tx4320\tqr\tx8640\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\fs20 array.vim version 1.2

\par Page }{\field{\*\fldinst {\b\fs20  PAGE }}{\fldrslt {\b\fs20\lang1024\langfe1024\noproof 5}}}{\b\fs20  of }{\field{\*\fldinst {\b\fs20  NUMPAGES }}{\fldrslt {\b\fs20\lang1024\langfe1024\noproof 7}}}{\b\fs20  
\par }}{\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}
{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8
\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s23\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\fs20\cf17\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2  
\par }\pard\plain \s19\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \cbpat18 \fs20\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2   
\par }\pard\plain \s23\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\cf17\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {
\par \hich\af2\dbch\af23\loch\f2   The plugin }{\b \hich\af2\dbch\af23\loch\f2 array.vim}{\hich\af2\dbch\af23\loch\f2  implements arrays.  Although a simple implementation,
\par \hich\af2\dbch\af23\loch\f2   it addresses most basic array applications.  It is based on user defined
\par \hich\af2\dbch\af23\loch\f2   commands (see }{\b\cf19 \hich\af2\dbch\af23\loch\f2 :h}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 40.2}{\hich\af2\dbch\af23\loch\f2 , }{\b\cf19 \hich\af2\dbch\af23\loch\f2 :h}{
\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 user-commands}{\hich\af2\dbch\af23\loch\f2 , and }{\b\cf19 \hich\af2\dbch\af23\loch\f2 :h}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 command}{
\hich\af2\dbch\af23\loch\f2 ) that can be
\par \hich\af2\dbch\af23\loch\f2   used both on the command \hich\af2\dbch\af23\loch\f2 line and in scripts.  These commands are
\par \hich\af2\dbch\af23\loch\f2   a syntactical convenience to provide ease of use and readability.  For
\par \hich\af2\dbch\af23\loch\f2   the more ambitious, functions called by these commands can be accessed
\par \hich\af2\dbch\af23\loch\f2   directly.  The use and description of these functions will not be
\par \hich\af2\dbch\af23\loch\f2  \hich\af2\dbch\af23\loch\f2  treated here.  From the command descriptions here, and reviewing the
\par \hich\af2\dbch\af23\loch\f2   related command/function declaration/definition in }{\b \hich\af2\dbch\af23\loch\f2 array.vim}{\hich\af2\dbch\af23\loch\f2 , function
\par \hich\af2\dbch\af23\loch\f2   usage should be readily apparent.
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   For quick reference, the command }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYSYN}{\hich\af2\dbch\af23\loch\f2  displays the syntax for all
\par \hich\af2\dbch\af23\loch\f2   c\hich\af2\dbch\af23\loch\f2 ommands.  For more detail with simple examples, use the command
\par \hich\af2\dbch\af23\loch\f2   }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYUSE}{\hich\af2\dbch\af23\loch\f2 .  Both of these have an optional command name argument which
\par \hich\af2\dbch\af23\loch\f2   provides for the display of specific commands.  For example, 
\par \hich\af2\dbch\af23\loch\f2  
\par }\pard\plain \s22\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\fs20\cf20\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2        }{\cf19 \hich\af2\dbch\af23\loch\f2 
ARRAYSYN}{\hich\af2\dbch\af23\loch\f2   ARRAYNEW
\par }\pard\plain \s23\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\cf17\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   will display syntax info\hich\af2\dbch\af23\loch\f2 rmation on array creation.
\par \hich\af2\dbch\af23\loch\f2  
\par }\pard\plain \s20\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \cbpat21 \fs20\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {
\par }\pard\plain \s17\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f2\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\dbch\af23 \hich\af2\dbch\af23\loch\f2  
\par }\pard\plain \s23\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\cf17\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2 
  To use an array, you must first create one.  The command }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYNEW}{\hich\af2\dbch\af23\loch\f2  is
\par \hich\af2\dbch\af23\loch\f2   used to do this.  The following describes how this is done and also
\par \hich\af2\dbch\af23\loch\f2   gives general information on array basics as they apply.
\par \hich\af2\dbch\af23\loch\f2   The syntax of the comm\hich\af2\dbch\af23\loch\f2 and is:
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2        }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYNEW}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 decl}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 size}{
\hich\af2\dbch\af23\loch\f2  [}{\b\cf20 \hich\af2\dbch\af23\loch\f2 init}{\hich\af2\dbch\af23\loch\f2 ] [}{\b\cf20 \hich\af2\dbch\af23\loch\f2 s}{\hich\af2\dbch\af23\loch\f2 ]
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   }{\b\cf22 \hich\af2\dbch\af23\loch\f2 ARRAYNEW}{\hich\af2\dbch\af23\loch\f2  takes 2 required arguments and 2 optional.  The required
\par \hich\af2\dbch\af23\loch\f2   arguments are }{\b\cf20 \hich\af2\dbch\af23\loch\f2 decl}{\hich\af2\dbch\af23\loch\f2  and }{\b\cf20 \hich\af2\dbch\af23\loch\f2 size}{\hich\af2\dbch\af23\loch\f2 .  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 decl}{
\hich\af2\dbch\af23\loch\f2  specifies the declared name of the
\par \hich\af2\dbch\af23\loch\f2   array.  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 size}{\hich\af2\dbch\af23\loch\f2  declares the number and size of each dimension of th\hich\af2\dbch\af23\loch\f2 e
\par \hich\af2\dbch\af23\loch\f2   array.  An example is:
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2        }{\b\cf22 \hich\af2\dbch\af23\loch\f2 ARRAYNEW}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 b:array:}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 1:2:3:}{
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   which creates an array named }{\b \hich\af2\dbch\af23\loch\f2 b:array:}{\hich\af2\dbch\af23\loch\f2  in the current buffer.  The use of
\par \hich\af2\dbch\af23\loch\f2   a scope specification letter in }{\b\cf20 \hich\af2\dbch\af23\loch\f2 decl}{\hich\af2\dbch\af23\loch\f2  is necessary and typical of all
\par \hich\af2\dbch\af23\loch\f2   array commands.  The only letters which may b\hich\af2\dbch\af23\loch\f2 e used are }{\b \hich\af2\dbch\af23\loch\f2 b w g}{\hich\af2\dbch\af23\loch\f2  for
\par \hich\af2\dbch\af23\loch\f2   }{\b \hich\af2\dbch\af23\loch\f2 b}{\hich\af2\dbch\af23\loch\f2 uffer, }{\b \hich\af2\dbch\af23\loch\f2 w}{\hich\af2\dbch\af23\loch\f2 indow, and }{\b \hich\af2\dbch\af23\loch\f2 g}{\hich\af2\dbch\af23\loch\f2 
lobal, respectively.  Other letters cannot be used
\par \hich\af2\dbch\af23\loch\f2   as their scopes will not be recognized in the function environment(s)
\par \hich\af2\dbch\af23\loch\f2   the command(s) call.
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   The dimension/size specifier tells }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYNEW}{\hich\af2\dbch\af23\loch\f2  how many dimension\hich\af2\dbch\af23\loch\f2 s there
\par \hich\af2\dbch\af23\loch\f2   are and the size of each.  Arrays are filled in }{\b \hich\af2\dbch\af23\loch\f2 row major}{\hich\af2\dbch\af23\loch\f2 , meaning the
\par \hich\af2\dbch\af23\loch\f2   }{\b \hich\af2\dbch\af23\loch\f2 row}{\hich\af2\dbch\af23\loch\f2  is filled, column by column.  Here the term }{\b \hich\af2\dbch\af23\loch\f2 row}{\hich\af2\dbch\af23\loch\f2  is relative and
\par \hich\af2\dbch\af23\loch\f2   only has the classic meaning in a 2 dimensional array.  In the example,
\par \hich\af2\dbch\af23\loch\f2   you may think of the row as b\hich\af2\dbch\af23\loch\f2 eing of one dimension with 2 X 3 columns,
\par \hich\af2\dbch\af23\loch\f2   or you may think of the row as being of two dimensions with 3 columns.
\par \hich\af2\dbch\af23\loch\f2   Either way, the result is the same, the filling order is 0:0:0:, 0:0:1:,
\par \hich\af2\dbch\af23\loch\f2   0:0:2:, 0:1:0:, 0:1:1:, 0:1:2:.  This is also a good place to po\hich\af2\dbch\af23\loch\f2 int out
\par \hich\af2\dbch\af23\loch\f2   that arrays are base 0, however, the size specification base is 1.
\par \page 
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   }{\b\cf20 \hich\af2\dbch\af23\loch\f2 init}{\hich\af2\dbch\af23\loch\f2  specifies an optional list of initialization values.  It can come
\par \hich\af2\dbch\af23\loch\f2   in two flavors: a comma separated list, or a string.  If it is in the
\par \hich\af2\dbch\af23\loch\f2   form of a string, the option\hich\af2\dbch\af23\loch\f2 al argument }{\b\cf20 \hich\af2\dbch\af23\loch\f2 s}{\hich\af2\dbch\af23\loch\f2  must be used.
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2        }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYNEW}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 b:array:}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 1:2:3:}{
\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 1,2,3,4,5,6}{
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   Creates an array initialized to the values specified, in the order
\par \hich\af2\dbch\af23\loch\f2   specified.  The array consists of 6 elements and there are 6 values, so
\par \hich\af2\dbch\af23\loch\f2   the array is fully populated.
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2    \hich\af2\dbch\af23\loch\f2     }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYNEW}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 b:array:}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 
1:2:3:}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 1,2,3}{
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   This time there are only 3 values, so the array is not fully populated.
\par \hich\af2\dbch\af23\loch\f2   What are the remaining elements?  By default,  they are '}{\b \hich\af2\dbch\af23\loch\f2 <Nul>}{\hich\af2\dbch\af23\loch\f2 '.  To
\par \hich\af2\dbch\af23\loch\f2   change this default, use }{\b\cf19 \hich\af2\dbch\af23\loch\f2 let}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 g:arrayInitVal}{\b\cf19 \hich\af2\dbch\af23\loch\f2 =}{\b \hich\af2\dbch\af23\loch\f2 
[your-choice]}{\hich\af2\dbch\af23\loch\f2 .
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2        }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRA\hich\af2\dbch\af23\loch\f2 YNEW}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 b:array: 1:2:3: my,array}{
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   First 2 elements of the array are '}{\b \hich\af2\dbch\af23\loch\f2 my}{\hich\af2\dbch\af23\loch\f2 ' and '}{\b \hich\af2\dbch\af23\loch\f2 array}{\hich\af2\dbch\af23\loch\f2 ' with the remaining
\par \hich\af2\dbch\af23\loch\f2   4 set to '}{\b \hich\af2\dbch\af23\loch\f2 <Nul>}{\hich\af2\dbch\af23\loch\f2 '.
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2        }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYNEW}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 b:array: 2:2:3: m,y,\\ ,a,r,r,a,y}{
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   Elements 0:0:0: thru 1:0:1: are user initialized, 1:0:2: thru 1:1:2:
\par \hich\af2\dbch\af23\loch\f2   are de\hich\af2\dbch\af23\loch\f2 faulted.
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2        }{\b\cf19 \hich\af2\dbch\af23\loch\f2 let}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 b:why}{\b\cf19 \hich\af2\dbch\af23\loch\f2 =}{\b \hich\af2\dbch\af23\loch\f2 'y'}{
\par \hich\af2\dbch\af23\loch\f2        }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYNEW}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 b:array: 2:2:3: m,b:why,\\ ,a,r,r,a,b:why}{
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   Gives the same result as the previous example.
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2        }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYNEW}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 b:array: 1:2:3: my\\ array s}{
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   A third way to populate the first 8 elements.
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   A few words abou\hich\af2\dbch\af23\loch\f2 t }{\b \hich\af2\dbch\af23\loch\f2 string}{\hich\af2\dbch\af23\loch\f2 s vs. }{\b \hich\af2\dbch\af23\loch\f2 string literal}{\hich\af2\dbch\af23\loch\f2 s.  In arrays, the
\par \hich\af2\dbch\af23\loch\f2   difference is that a }{\b \hich\af2\dbch\af23\loch\f2 string}{\hich\af2\dbch\af23\loch\f2  is stored without quotation marks while
\par \hich\af2\dbch\af23\loch\f2   a }{\b \hich\af2\dbch\af23\loch\f2 string literal}{\hich\af2\dbch\af23\loch\f2  is stored with them (as supplied by the user).  So the
\par \hich\af2\dbch\af23\loch\f2   difference between
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2        }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYNEW}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 b:array: 1:2:3: my\\ array}{
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   and
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2        }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYNEW}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 b:array: 1:2:3: 'my\\ array'}{
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   is that the first is stored without quotation marks, while the second
\par \hich\af2\dbch\af23\loch\f2   is stored with them (in this case, single quotation marks).  In both
\par \hich\af2\dbch\af23\loch\f2   instances, the first element of the array is initialize\hich\af2\dbch\af23\loch\f2 d.
\par \hich\af2\dbch\af23\loch\f2  
\par }\pard\plain \s20\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \cbpat21 \fs20\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2   
\par }\pard\plain \s23\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\cf17\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2  
\par 
\par \page \hich\af2\dbch\af23\loch\f2   Now to comment on how to use the elements of the array.  The values can
\par \hich\af2\dbch\af23\loch\f2   be used as any variable.  When used as the right hand side (}{\b\cf20 \hich\af2\dbch\af23\loch\f2 rhs}{\hich\af2\dbch\af23\loch\f2 ) of an
\par \hich\af2\dbch\af23\loch\f2   expression, they can be employed with impunity.  The expression
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2        }{\b\cf19 \hich\af2\dbch\af23\loch\f2 let}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 ltrM}{\b\cf19 \hich\af2\dbch\af23\loch\f2 =}{\b \hich\af2\dbch\af23\loch\f2 b:array:0:0:0
\hich\af2\dbch\af23\loch\f2 :}{
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   assigns the letter '}{\b \hich\af2\dbch\af23\loch\f2 m}{\hich\af2\dbch\af23\loch\f2 ' from the above created array to the variable }{\b\cf20 \hich\af2\dbch\af23\loch\f2 ltrM}{\hich\af2\dbch\af23\loch\f2 .
\par \hich\af2\dbch\af23\loch\f2   And although the obverse is equally valid, left hand side (}{\b\cf20 \hich\af2\dbch\af23\loch\f2 lhs}{\hich\af2\dbch\af23\loch\f2 ) use can
\par \hich\af2\dbch\af23\loch\f2   cause problems:
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2        }{\b\cf19 \hich\af2\dbch\af23\loch\f2 let}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 b:array:3:2:2:}{\b\cf19 \hich\af2\dbch\af23\loch\f2 =}{\b \hich\af2\dbch\af23\loch\f2 ltrM}{
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   from the example, there is no }{\b\cf20 \hich\af2\dbch\af23\loch\f2 b:array:3:2:2:}{\hich\af2\dbch\af23\loch\f2  el\hich\af2\dbch\af23\loch\f2 ement in the array.  It
\par \hich\af2\dbch\af23\loch\f2   is, however, created outside the bounds of the array.  There is an
\par \hich\af2\dbch\af23\loch\f2   alternative way to handle this, with bounds checking.  This will be
\par \hich\af2\dbch\af23\loch\f2   addressed further on in this discussion.  For right now, just remember,
\par \hich\af2\dbch\af23\loch\f2   }{\b\cf20 \hich\af2\dbch\af23\loch\f2 rhs}{\hich\af2\dbch\af23\loch\f2  == }{\b\cf23 \hich\af2\dbch\af23\loch\f2 safe}{\hich\af2\dbch\af23\loch\f2 , }{\b\cf20 \hich\af2\dbch\af23\loch\f2 lhs}{\hich\af2\dbch\af23\loch\f2  
\hich\af2\dbch\af23\loch\f2 == }{\b\cf6 \hich\af2\dbch\af23\loch\f2 risky}{\hich\af2\dbch\af23\loch\f2 .
\par \hich\af2\dbch\af23\loch\f2  
\par }\pard\plain \s20\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \cbpat21 \fs20\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {
\par }\pard\plain \s23\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\cf17\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   Now that an array has been created, how do we change values within the
\par \hich\af2\dbch\af23\loch\f2   array?  The }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYSET}{\hich\af2\dbch\af23\loch\f2  command is used for this.  With this command,
\par \hich\af2\dbch\af23\loch\f2   single elements as well as sub arrays and entire arrays can be set.
\par \hich\af2\dbch\af23\loch\f2   The syntax is:
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2        }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARR\hich\af2\dbch\af23\loch\f2 AYSET}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 decl val}{\hich\af2\dbch\af23\loch\f2  [}{\b\cf20 
\hich\af2\dbch\af23\loch\f2 s}{\hich\af2\dbch\af23\loch\f2 ]
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   }{\b\cf20 \hich\af2\dbch\af23\loch\f2 decl}{\hich\af2\dbch\af23\loch\f2  has the same usage as in }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYNEW}{\hich\af2\dbch\af23\loch\f2 , as does }{\b\cf20 \hich\af2\dbch\af23\loch\f2 val
}{\hich\af2\dbch\af23\loch\f2 , being the
\par \hich\af2\dbch\af23\loch\f2   equivalent of }{\b\cf20 \hich\af2\dbch\af23\loch\f2 init}{\hich\af2\dbch\af23\loch\f2  in that command.  The optional argument, }{\b\cf20 \hich\af2\dbch\af23\loch\f2 s}{\hich\af2\dbch\af23\loch\f2 ,
\par \hich\af2\dbch\af23\loch\f2   likewise has the same usage when }{\b\cf20 \hich\af2\dbch\af23\loch\f2 val}{\hich\af2\dbch\af23\loch\f2  is a string.  Again, some
\par \hich\af2\dbch\af23\loch\f2   examples:
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2        }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYSET}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 b:array: 1\hich\af2\dbch\af23\loch\f2 ,way,||,another}{
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   Sets the array to the specified values  .In this case, only one value,
\par \hich\af2\dbch\af23\loch\f2   and the whole array is specified, so the first element of the array is
\par \hich\af2\dbch\af23\loch\f2   set.
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   With }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYSET}{\hich\af2\dbch\af23\loch\f2 , }{\b\cf20 \hich\af2\dbch\af23\loch\f2 decl}{\hich\af2\dbch\af23\loch\f2  can also specify an element or a sub array.
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2        }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYSET}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 b:array:1: 1,way,||,another}{
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   sets elements 1:0:0: thru 1:1:0:, with 0:0:0: thru 0:1:2: and 1:1:1: and
\par \hich\af2\dbch\af23\loch\f2   1:1:2: defaulting to }{\b \hich\af2\dbch\af23\loch\f2 <Nul>}{\hich\af2\dbch\af23\loch\f2 .
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   To set a single element, just specify the element as }{\b\cf20 \hich\af2\dbch\af23\loch\f2 decl}{\hich\af2\dbch\af23\loch\f2  and give it
\par \hich\af2\dbch\af23\loch\f2   a }{\b\cf20 \hich\af2\dbch\af23\loch\f2 val}{
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2        }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYSET}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 b:array:1:1:2: 1\\ wa\hich\af2\dbch\af23\loch\f2 y\\ ||\\ another}{
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   sets the element and checks bounds to assure it is in the array.  This
\par \hich\af2\dbch\af23\loch\f2   obviates the }{\b\cf20 \hich\af2\dbch\af23\loch\f2 lhs}{\hich\af2\dbch\af23\loch\f2  problem in expression assignments.
\par \hich\af2\dbch\af23\loch\f2  
\par }\pard\plain \s20\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \cbpat21 \fs20\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2   
\par }\pard\plain \s23\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\cf17\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2  
\par 
\par \page \hich\af2\dbch\af23\loch\f2   You can retrieve array elements or sub arrays or entire arrays using
\par \hich\af2\dbch\af23\loch\f2   }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYGET}{\hich\af2\dbch\af23\loch\f2 .  The syntax is
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2    \hich\af2\dbch\af23\loch\f2     }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYGET}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 decl}{\hich\af2\dbch\af23\loch\f2  [}{\b\cf20 \hich\af2\dbch\af23\loch\f2 var
}{\hich\af2\dbch\af23\loch\f2 ]
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   }{\b\cf20 \hich\af2\dbch\af23\loch\f2 var}{\hich\af2\dbch\af23\loch\f2  is an optional variable or list of variables in which array element
\par \hich\af2\dbch\af23\loch\f2   values are to be placed.  If it is not specified, the values are
\par \hich\af2\dbch\af23\loch\f2   displayed on the command line.  A simple example would be:
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2        }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYGET}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 g:status:3\hich\af2\dbch\af23\loch\f2 :1: b:current}{
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   This gets the 4th row, second element (assuming a 2 dimensional array
\par \hich\af2\dbch\af23\loch\f2   4 X 2) from the array and places it in the argument variable.  This is
\par \hich\af2\dbch\af23\loch\f2   equivalent to:
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2        }{\b\cf19 \hich\af2\dbch\af23\loch\f2 let}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 b:current}{\b\cf19 \hich\af2\dbch\af23\loch\f2 =}{\b \hich\af2\dbch\af23\loch\f2 g:status:3:1:}{
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   Although you can use individual array\hich\af2\dbch\af23\loch\f2  elements as the }{\b\cf20 \hich\af2\dbch\af23\loch\f2 rhs}{\hich\af2\dbch\af23\loch\f2  of an
\par \hich\af2\dbch\af23\loch\f2   expression, assignment of multiple array elements can be a tedious
\par \hich\af2\dbch\af23\loch\f2   task.  }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYGET}{\hich\af2\dbch\af23\loch\f2  simplifies this by accepting a comma separated list,
\par \hich\af2\dbch\af23\loch\f2   }{\b\cf20 \hich\af2\dbch\af23\loch\f2 var}{\hich\af2\dbch\af23\loch\f2 , of variables and assigning successive elements of }{\b\cf20 \hich\af2\dbch\af23\loch\f2 decl}{\hich\af2\dbch\af23\loch\f2  to them.
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2        }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYGET}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 b:addrBook:2: b:name,b:address,b:phone}{
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   This one statement replaces 3 }{\b\cf19 \hich\af2\dbch\af23\loch\f2 let}{\hich\af2\dbch\af23\loch\f2  statements, retrieving the name,
\par \hich\af2\dbch\af23\loch\f2   address, and phone from the third row in an address book array.
\par \hich\af2\dbch\af23\loch\f2  
\par }\pard\plain \s20\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \cbpat21 \fs20\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2   
\par }\pard\plain \s23\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\cf17\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   You can make copies of arrays and sub arrays with the }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYCPY}{\hich\af2\dbch\af23\loch\f2  command.
\par \hich\af2\dbch\af23\loch\f2   Its syntax is:
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2        }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYCPY}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 srcdecl dstdecl}{
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   For example, the command
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2        }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYCPY}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 b:array: b:arycpy:}{
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   copies }{\b \hich\af2\dbch\af23\loch\f2 b:array:}{\hich\af2\dbch\af23\loch\f2  to }{\b \hich\af2\dbch\af23\loch\f2 b:arycpy:}{\hich\af2\dbch\af23\loch\f2 , while
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2        }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYCPY}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 b:array:0: b:subarycpy:}{
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   copies the sub array }{\b \hich\af2\dbch\af23\loch\f2 b:array:0:}{\hich\af2\dbch\af23\loch\f2  to }{\b \hich\af2\dbch\af23\loch\f2 b:subarycpy:}{
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   \hich\af2\dbch\af23\loch\f2 Think of }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYCPY}{\hich\af2\dbch\af23\loch\f2  as an }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYGET}{\hich\af2\dbch\af23\loch\f2  for arrays, or, what }{
\b\cf19 \hich\af2\dbch\af23\loch\f2 let}{\hich\af2\dbch\af23\loch\f2  would do if
\par \hich\af2\dbch\af23\loch\f2   vim recognized arrays.
\par \hich\af2\dbch\af23\loch\f2  
\par }\pard\plain \s20\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \cbpat21 \fs20\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2   
\par }\pard\plain \s23\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\cf17\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2  
\par \page 
\par }\pard\plain \s20\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \cbpat21 \fs20\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2   
\par }\pard\plain \s23\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\cf17\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   You put elements of arrays and sub arrays with the }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYPUT}{\hich\af2\dbch\af23\loch\f2  command.
\par \hich\af2\dbch\af23\loch\f2   Its syntax is:
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2        }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYPUT}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 srcdecl dstdecl}{
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   For example, the comm\hich\af2\dbch\af23\loch\f2 and
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2        }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYPUT}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 b:array: b:altarray:}{
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   copies }{\b \hich\af2\dbch\af23\loch\f2 b:array:}{\hich\af2\dbch\af23\loch\f2  to }{\b \hich\af2\dbch\af23\loch\f2 b:altarray:}{\hich\af2\dbch\af23\loch\f2 , while
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2        }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYPUT}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 b:array:0: b:altarray:}{
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   copies the sub array }{\b \hich\af2\dbch\af23\loch\f2 b:array:0:}{\hich\af2\dbch\af23\loch\f2  to }{\b \hich\af2\dbch\af23\loch\f2 b:altarray:}{
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2  
\par }\pard\plain \s20\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \cbpat21 \fs20\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2   
\par }\pard\plain \s23\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\cf17\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2  
\par 
\par \hich\af2\dbch\af23\loch\f2   The dimension of an array can be obtained through the command }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAY\hich\af2\dbch\af23\loch\f2 DIM}{\hich\af2\dbch\af23\loch\f2 .
\par \hich\af2\dbch\af23\loch\f2   A string of the form 'size X size X size...' is returned.
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2        }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYDIM}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 b:array:}{
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   would return '}{\b \hich\af2\dbch\af23\loch\f2 1 X 2 X}{\hich\af2\dbch\af23\loch\f2  }{\b \hich\af2\dbch\af23\loch\f2 3}{\hich\af2\dbch\af23\loch\f2 ' for an array created with
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2        }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYNEW}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 b:arrray: 1:2:3:}{
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   while
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2        }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYDIM}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 b:array:0:}{
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   would return '}{\b \hich\af2\dbch\af23\loch\f2 2 X 3}{\hich\af2\dbch\af23\loch\f2 ' for the sa\hich\af2\dbch\af23\loch\f2 me array.
\par \hich\af2\dbch\af23\loch\f2  
\par }\pard\plain \s20\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \cbpat21 \fs20\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2   
\par }\pard\plain \s23\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\cf17\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   Lastly, to delete an array use }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYDEL}{\hich\af2\dbch\af23\loch\f2 .  The syntax is:
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2        }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYDEL}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 decl}{
\par \hich\af2\dbch\af23\loch\f2  
\par }\pard\plain \s24\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\fs20\cf17\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2   NOTE:
\par }\pard\plain \s23\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\cf17\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2 
     Only arrays, not sub arrays, may be deleted.  This is because
\par \hich\af2\dbch\af23\loch\f2      deletion of a sub array could cause the resultant array to be
\par \hich\af2\dbch\af23\loch\f2      asymmetr\hich\af2\dbch\af23\loch\f2 ical.
\par \hich\af2\dbch\af23\loch\f2  
\par }\pard\plain \s19\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \cbpat18 \fs20\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\page \hich\af2\dbch\af23\loch\f2   
\par }\pard\plain \s23\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\cf17\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   Let's put it all together.  This is an example of using }{\b \hich\af2\dbch\af23\loch\f2 array.vim}{
\par \hich\af2\dbch\af23\loch\f2   commands to implement an address book array in a vim script.
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   First create the array with 3 dimensions.  The first will be the number
\par \hich\af2\dbch\af23\loch\f2   of entries.  The second will be a\hich\af2\dbch\af23\loch\f2 ddresses, and the third will be phone
\par \hich\af2\dbch\af23\loch\f2   numbers.  We'll have a home address and a business address to put in the
\par \hich\af2\dbch\af23\loch\f2   second dimension.  For phones, we want to be able to contact these
\par \hich\af2\dbch\af23\loch\f2   people almost anywhere, so we'll have 3 phone numbers: business, cell,
\par \hich\af2\dbch\af23\loch\f2  \hich\af2\dbch\af23\loch\f2  and home.
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   This translates to an X:2:3: array size.  For 'X' we'll use 10, to keep
\par \hich\af2\dbch\af23\loch\f2   track of our ten most contacted people (important contacts).
\par \hich\af2\dbch\af23\loch\f2  
\par }\pard\plain \s22\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\fs20\cf20\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\b0\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYNEW}{
\hich\af2\dbch\af23\loch\f2  g:addrbk: 10:2:3:
\par \hich\af2\dbch\af23\loch\f2   \\ Dave,1010\\ Silicon\\ Way,123\\ Elm\\ St,5552447\\ x300,5552355,5554663,
\par \hich\af2\dbch\af23\loch\f2   \\Jo\hich\af2\dbch\af23\loch\f2 hn,1010\\ Silicon\\ Way,986\\ Walnut\\ Dr,5552447\\ x304,5551776,5552004,
\par \hich\af2\dbch\af23\loch\f2   \\Frank,1180\\ Industry\\ Park,836\\ Cherry\\ Av,5551212,5552355,5554663,
\par \hich\af2\dbch\af23\loch\f2   \\Harry,1180\\ Industry\\ Park,7734\\ Dogwood,5551212,<Nul>,5553320
\par \hich\af2\dbch\af23\loch\f2  
\par }\pard\plain \s23\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\cf17\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2 
  This gives us a new global array with 4 initia\hich\af2\dbch\af23\loch\f2 l entries in }{\b \hich\af2\dbch\af23\loch\f2 g:addrbk:}{\hich\af2\dbch\af23\loch\f2 .
\par \hich\af2\dbch\af23\loch\f2   We add a receptionist who doesn't give out her home address, has no
\par \hich\af2\dbch\af23\loch\f2   cell phone, and doesn't want her home phone advertised.
\par \hich\af2\dbch\af23\loch\f2  
\par }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYSET}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 g:addrbk:4: Debbie,1010\\ Silicon\\ Way,<Nul>,5552447\\ x314}{
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   Now we could define commands or\hich\af2\dbch\af23\loch\f2  functions to access these entries (and
\par \hich\af2\dbch\af23\loch\f2   probably would), and they'd all use }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYGET}{\hich\af2\dbch\af23\loch\f2  to access the information.
\par \hich\af2\dbch\af23\loch\f2   However, for brevity's sake, here we'll just use the command directly.
\par \hich\af2\dbch\af23\loch\f2   We need to get in touch with Frank, row index 2 in the array.
\par \hich\af2\dbch\af23\loch\f2  
\par }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARR\hich\af2\dbch\af23\loch\f2 AYGET}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 g:addrbk:2:}{
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   This would display
\par \hich\af2\dbch\af23\loch\f2  
\par }\pard\plain \s24\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\fs20\cf17\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2 
- Frank - 1180 Industry Park - 836 Cherry Ave. - 5551212 - 5552355 - 5554663 -
\par }\pard\plain \s23\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\cf17\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2    To get just phones
\par \hich\af2\dbch\af23\loch\f2  
\par }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYGET}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 g:addrbk:2:1:}{
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   which returns
\par \hich\af2\dbch\af23\loch\f2  
\par }\pard\plain \s24\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\fs20\cf17\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2 - 5551212 - 5552355 - 5554663 -
\par }\pard\plain \s23\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\cf17\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2    To get his business address
\par \hich\af2\dbch\af23\loch\f2  
\par }{\b\cf19 \hich\af2\dbch\af23\loch\f2 ARRAYGET}{\hich\af2\dbch\af23\loch\f2  }{\b\cf20 \hich\af2\dbch\af23\loch\f2 g:addrbk:2:0:1:}{
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   which returns
\par \hich\af2\dbch\af23\loch\f2  
\par }\pard\plain \s24\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\fs20\cf17\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2 - 1180 Industry Park -
\par }\pard\plain \s17\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f2\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\dbch\af23 \hich\af2\dbch\af23\loch\f2  
\par }\pard\plain \s23\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\cf17\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2   And so on.
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2  
\par \page \hich\af2\dbch\af23\loch\f2  There is a sample file, }{\b \hich\af2\dbch\af23\loch\f2 example/addrbook.vim}{\hich\af2\dbch\af23\loch\f2 , included with this
\par \hich\af2\dbch\af23\loch\f2   package that illustrates this example along with suggested commands
\par \hich\af2\dbch\af23\loch\f2   and a function for accessing\hich\af2\dbch\af23\loch\f2  the array.
\par \hich\af2\dbch\af23\loch\f2  
\par }\pard\plain \s19\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \cbpat18 \fs20\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {
\par }\pard\plain \s17\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f2\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\dbch\af23 \hich\af2\dbch\af23\loch\f2  
\par }\pard\plain \s21\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\fs20\cf19\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2 
     This section just deals with some miscellany, partly about the
\par \hich\af2\dbch\af23\loch\f2      function interface, but also about the buffer variables that can be
\par \hich\af2\dbch\af23\loch\f2      used to control various aspects of }{\cf17 \hich\af2\dbch\af23\loch\f2 array.vim}{\hich\af2\dbch\af23\loch\f2  behavior.  It will be
\par \hich\af2\dbch\af23\loch\f2      quite short, further \hich\af2\dbch\af23\loch\f2 information can be gleaned from perusing
\par \hich\af2\dbch\af23\loch\f2      }{\cf17 \hich\af2\dbch\af23\loch\f2 array.vim}{\hich\af2\dbch\af23\loch\f2 .
\par \hich\af2\dbch\af23\loch\f2  
\par }\pard\plain \s23\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\cf17\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2 
  For each command there is a corresponding function which is lower case
\par \hich\af2\dbch\af23\loch\f2   excepting the first letter, and the first letter of the command acronym.
\par \hich\af2\dbch\af23\loch\f2   E.G., for }{\b\cf24 \hich\af2\dbch\af23\loch\f2 ARRAYGET}{\hich\af2\dbch\af23\loch\f2 , the corresponding function \hich\af2\dbch\af23\loch\f2 is }{\b\cf24 \hich\af2\dbch\af23\loch\f2 ArrayGet()}{\hich\af2\dbch\af23\loch\f2 .

\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   The command mechanism in vim passes arguments to functions enclosed in
\par \hich\af2\dbch\af23\loch\f2   quotes.  You will have to mimic this behavior to use the functions.
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   Because arguments are quoted, you should dereference variables to their
\par \hich\af2\dbch\af23\loch\f2   constituent parts \hich\af2\dbch\af23\loch\f2 before quoting and passing.
\par \hich\af2\dbch\af23\loch\f2  
\par \hich\af2\dbch\af23\loch\f2   The following variables can be assigned values to control some aspects
\par \hich\af2\dbch\af23\loch\f2   of function behavior.
\par \hich\af2\dbch\af23\loch\f2  
\par }\pard\plain \s21\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\fs20\cf19\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2   g:arrayInitVal
\par }\pard\plain \s23\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\cf17\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2 
       specifies the value to be placed in non-initialized array elements.
\par }\pard\plain \s17\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f2\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\dbch\af23 \hich\af2\dbch\af23\loch\f2  
\par }\pard\plain \s21\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\fs20\cf19\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2   g:arrayVerboseMsg
\par }\pard\plain \s23\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\cf17\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2        if zer\hich\af2\dbch\af23\loch\f2 
o, turns off messages and warnings, default is one.
\par }\pard\plain \s17\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f2\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\dbch\af23 \hich\af2\dbch\af23\loch\f2  
\par }\pard\plain \s23\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\cf17\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {\hich\af2\dbch\af23\loch\f2 
  Other buffer variables exist which control display colors, see script.
\par }\pard\plain \s17\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f2\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\dbch\af23 \hich\af2\dbch\af23\loch\f2  
\par }\pard\plain \s19\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \cbpat18 \fs20\lang1033\langfe1033\loch\af2\hich\af2\dbch\af23\cgrid\langnp1033\langfenp1033 {
\par }\pard\plain \s17\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f2\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\dbch\af23 \hich\af2\dbch\af23\loch\f2  
\par }}